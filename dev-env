#! /bin/bash


# Esse script ira montar um ambiente todo automatizado com as configurações e tecnologias personalizadas para o uso do meu dia-a-dia

ZSHRC=resources/.zshrc
BASHRC=resources/.bashrc
FILE=jetbrains-toolbox.tar.gz
DIRECTORY=jetbrains-toolbox-1.23.11731
NOISE=./noise.tgz


install=(terminator vim neofetch htop cmatrix python3.9 python3-pip build-essential nodejs gcc g++ make yarn zsh)

# Add some repository

# Add repo Node 16x
echo "Add repository Node 16x"

curl -fsSL https://deb.nodesource.com/setup_16.x | sudo bash -

# Add repo Yarn package manager
echo "Add repository Yarn package manager"

curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt update && sudo apt clean all

for i in ${install[*]}
do
	sudo apt install $i -y
done

applist=(discord.deb slack.deb google-chrome.deb code.deb zoom.deb insomnia.deb)

# Download Discord app
echo "Download Discord app"
wget -O discord.deb "https://discord.com/api/download?platform=linux&format=deb"

# Download Google-Chrome browser
echo "Download Google-Chrome browser"
wget -O google-chrome.deb "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"

# Download vscode app
echo "Download VsCode app"
wget -O code.deb "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"

# Download Insomnia app
echo "Download Insomnnia app"
wget -O insomnia.deb "https://updates.insomnia.rest/downloads/ubuntu/latest?&app=com.insomnia.app&source=website"

# Download AppImage toolbox jetbrains
echo "Download AppImage Jetbrains Toolbox"
wget -O jetbrains-toolbox.tar.gz "https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.23.11731.tar.gz"

# Download release NoiseTorch
echo "Download NoiseTorch"
wget -O noise.tgz "https://github.com/noisetorch/NoiseTorch/releases/download/v0.12.2/NoiseTorch_x64_v0.12.2.tgz"

for app in ${applist[*]}
do
	sudo dpkg -i $app
done

chsh -s /bin/zsh

sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"
ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"

# Extract and move AppImage to Documents

# Extract tar.gz

if [ -f $FILE ]; then
	echo "$FILE exist. Extract now"
	tar -xvzf $FILE
	echo "Removing resources"
	rm -rf $FILE
fi

# Move AppImage to Documents

if [ -d $DIRECTORY ]; then
	echo "$DIRECTORY exist. Move to Documents"
	mv $DIRECTORY/jetbrains-toolbox $HOME/Documents
	echo "Removing resources"
	rm -rf $DIRECTORY
fi

# Extract NoiseTorch

if [ -f $NOISE ]; then
	echo "$NOISE exist. Extract now"
	tar -C $HOME -xzf $NOISE
	# Depending on your desktop environment you may need to wait for it to rescan for applications, or tell it to do a refresh now.
	gtk-update-icon-cache
	# Give it the required permissions with setcap
	sudo setcap 'CAP_SYS_RESOURCE=+ep' ~/.local/bin/noisetorch
	echo "Removing resources"
	rm -rf $NOISE
fi

# After all install, remove packages
for app in ${applist[*]}
do
	echo 'deleting' ${app}
	rm -rf $app
done



sudo apt update && sudo apt upgrade -y

# Move .bashrc and .zshrc with actual update

if [ -f $BASHRC ]; then
	echo "Copy .bashrc to home"
	cp $BASHRC $HOME/
fi

if [ -f $ZSHRC ]; then
	echo "Copy .zshrc to home"
	cp $ZSHRC $HOME/
fi

source $HOME/.bashrc
source $HOME/.zshrc

sudo apt update && sudo apt upgrade

npm install -g npm@8.6.0 -y
